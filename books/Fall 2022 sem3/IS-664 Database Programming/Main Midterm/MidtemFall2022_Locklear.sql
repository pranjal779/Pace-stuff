/*
TASK 1
*/

DROP FUNCTION IF EXISTS structure_analysis;
DELIMITER //
CREATE FUNCTION structure_analysis(A VARCHAR(50))
RETURNS VARCHAR(100)
NOT DETERMINISTIC
READS SQL DATA

BEGIN
	DECLARE SRF VARCHAR(50); DECLARE WTR VARCHAR(50);
	DECLARE RCK DECIMAL(10,2); DECLARE MTL DECIMAL(10,2);
	DECLARE TA VARCHAR(100);

	SELECT SF.Surface, SF.Water
	FROM surface_feature SF
	WHERE SF.Designation = A
	INTO SRF,WTR;	

	SELECT CS.Content_Rock, CS.Content_Metal
	FROM composition_simple CS
	WHERE CS.Designation = A
	INTO RCK,MTL;

	SET TA = A;

	IF SRF = 'Medium' OR SRF = 'Medium-Soft' THEN
		SET TA = CONCAT('SURFACE: ','IDEAL ');
	END IF;

	IF SRF = 'Soft' THEN
		SET TA = CONCAT('SURFACE: ','ACCEPTABLE ');
	END IF;

	IF SRF = 'Hard'  OR SRF = 'Hard-Medium' THEN
		SET TA = CONCAT('SURFACE: ','UNACCEPTABLE ');
	END IF;

	IF WTR = 'No-Content' THEN
		SET TA = CONCAT(TA,'WATER: ','ACCEPTABLE ');
	END IF;

	IF WTR = 'Low-Content' THEN
		SET TA = CONCAT(TA,'WATER: ','IDEAL ');
	END IF;

	IF WTR = 'Medium-Content' OR WTR = 'High-Content' THEN
		SET TA = CONCAT(TA,'WATER: ','UNACCEPTABLE ');
	END IF;

	IF RCK <= 50 THEN
		SET TA = CONCAT(TA,'ROCK: ','ACCEPTABLE ');
	END IF;

	IF RCK > 50 THEN
		SET TA = CONCAT(TA,'ROCK: ','UNACCEPTABLE ');
	END IF;	

	IF MTL > 55 THEN
		SET TA = CONCAT(TA,'METAL: ','ACCEPTABLE ');
	END IF;

	IF MTL <= 55 THEN
		SET TA = CONCAT(TA,'METAL: ','UNACCEPTABLE ');
	END IF;

	RETURN TA;

END //
DELIMITER ;

SELECT structure_analysis('C-f2261-k');

DROP FUNCTION IF EXISTS euclidean;
DELIMITER //
CREATE FUNCTION euclidean(A VARCHAR(50))
RETURNS DECIMAL(10,2)
NOT DETERMINISTIC
READS SQL DATA

BEGIN
	DECLARE AX DECIMAL(10,2); DECLARE AY DECIMAL(10,2); DECLARE AZ DECIMAL(10,2);
	DECLARE XD DECIMAL(10,2); DECLARE YD DECIMAL(10,2); DECLARE ZD DECIMAL(10,2);
	DECLARE D DECIMAL(10,2);

	SELECT SP.X, SP.Y, SP.Z
	FROM spatialCoord SP
	WHERE SP.Designation = A
	INTO AX,AY,AZ;

	SET XD = POW(AX-0,2);
	SET YD = POW(AY-0,2);
	SET ZD = POW(AZ-0,2);
	SET D = SQRT(XD + YD + ZD);

	RETURN D;
END //
DELIMITER ;

SELECT euclidean('C-f2261-k');

DROP FUNCTION IF EXISTS euclideanAsteroid;
DELIMITER //
CREATE FUNCTION euclideanAsteroid(A VARCHAR(50), B VARCHAR(100))
RETURNS DECIMAL(10,2)
NOT DETERMINISTIC
READS SQL DATA

BEGIN
	DECLARE AX DECIMAL(10,2); DECLARE AY DECIMAL(10,2); DECLARE AZ DECIMAL(10,2);
	DECLARE B_X DECIMAL(10,2); DECLARE B_Y DECIMAL(10,2); DECLARE B_Z DECIMAL(10,2);
	DECLARE XD DECIMAL(10,2); DECLARE YD DECIMAL(10,2); DECLARE ZD DECIMAL(10,2);
	DECLARE D DECIMAL(10,2);

	SELECT SP.X, SP.Y, SP.Z
	FROM spatialCoord SP
	WHERE SP.Designation = A
	INTO AX,AY,AZ;

	SELECT SP.X, SP.Y, SP.Z
	FROM spatialCoord SP
	WHERE SP.Designation = B
	INTO B_X,B_Y,B_Z;

	SET XD = POW(AX-B_X,2);
	SET YD = POW(AY-B_Y,2);
	SET ZD = POW(AZ-B_Z,2);
	SET D = SQRT(XD + YD + ZD);

	RETURN D;
END //
DELIMITER ;

SELECT euclideanAsteroid('C-f2261-k','C-f2261-k');


DROP PROCEDURE IF EXISTS asteroid_prospectus;
DELIMITER //
CREATE PROCEDURE asteroid_prospectus(CNTRY VARCHAR(100), A VARCHAR(100))

BEGIN

	-- UTILITY VARIABLES
	DECLARE I INT;  
	DECLARE R INT;
	DECLARE D DECIMAL(10,4);
	DECLARE MN DECIMAL(10,4); DECLARE MX DECIMAL(10,4);
	DECLARE MN_A VARCHAR(50); DECLARE MX_A VARCHAR(50);
	-- CURSOR VARIABLES X CURSOR
	DECLARE DESG VARCHAR(50); DECLARE CTRY VARCHAR(50);
	DECLARE AX INT; DECLARE AY INT; DECLARE AZ INT;
	DECLARE SURF VARCHAR(50); DECLARE WTR VARCHAR(50);
	DECLARE RCK DECIMAL(10,2); DECLARE MTL DECIMAL(10,2);

	-- OUTPUT VARIABLES
	DECLARE ALPHA VARCHAR(200); DECLARE BETA VARCHAR(200);DECLARE GAMMA VARCHAR(200);
	
	-- DECLARE X CURSOR
	DECLARE X CURSOR FOR
	SELECT R.Designation, R.Country, SP.X, SP.Y, SP.Z, SF.Surface,SF.Water,
	CS.Content_Rock, CS.Content_Metal
	FROM registry R
	JOIN spatialCoord SP ON R.Designation = SP.Designation
	JOIN surface_feature SF ON SF.Designation = R.Designation
	JOIN composition_simple CS ON R.Designation = CS.Designation
	WHERE R.Country = CNTRY;
	

	OPEN X;
	SET R = FOUND_ROWS();
	SET I = 0;
	SET MN = 1000; SET MX = 0;	
	SET MN_A = ''; SET MX_A = '';
	WHILE I < R DO
		FETCH X INTO DESG,CTRY,AX,AY,AZ,SURF,WTR,RCK,MTL;
		SET D = euclideanAsteroid(DESG,A);
		IF D < MN AND DESG != A THEN
			SET MN = D;
			SET MN_A = DESG;
		END IF;
		IF D > MX THEN
			SET MX = D;
			SET MX_A = DESG;
		END IF;
		SET I = I + 1;
	END WHILE;	
	CLOSE X;
	SET ALPHA =  CONCAT(A,' is ','Closest To ',MN_A,'(',MN,')',' and Most Distant From ', MX_A, '(',MX,')');
	SET BETA = structure_analysis(A);
	SET GAMMA = CONCAT(ALPHA,' -> ',BETA);
	SELECT GAMMA AS MSG;

END //
DELIMITER ;

CALL asteroid_prospectus('RUSSIA','C-b380-k');
CALL asteroid_prospectus('US','C-b380-k');
CALL asteroid_prospectus('UK','C-b380-k');
CALL asteroid_prospectus('CHINA','C-b380-k');

