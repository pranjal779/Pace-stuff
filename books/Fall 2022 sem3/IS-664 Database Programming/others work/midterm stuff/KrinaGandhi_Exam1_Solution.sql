USE imperial_defense;

DROP PROCEDURE IF EXISTS networkComponentAnalysis;

DELIMITER //
-- TASK 
CREATE PROCEDURE networkComponentAnalysis(N VARCHAR(40), CT VARCHAR(20))
BEGIN
	-- UTILITY VARIABLES
	DECLARE COUNTER INT; DECLARE ROW_COUNT INT; DECLARE PRATIO DECIMAL(10,2); DECLARE PORTDIFF INT; DECLARE E VARCHAR(200);
	-- CURSOR VARIABLES
	DECLARE C_ID VARCHAR(10); DECLARE C_PORTS INT; DECLARE C_ENTRYPORT INT; DECLARE C_EXITPORT INT; DECLARE C_RTYPE VARCHAR(20);
	DECLARE C_RF VARCHAR(20); DECLARE C_CON VARCHAR(50); DECLARE C_NETWORK VARCHAR(25);
	-- DECLARING CURSORS
	DECLARE CR_HUB CURSOR FOR SELECT * FROM HUB WHERE AssignedTo = N;
	DECLARE CR_SWITCH CURSOR FOR SELECT SID,EntryPort, ExitPort FROM SWITCH WHERE AssignedTo = N;
	DECLARE CR_REP CURSOR FOR SELECT * FROM repeater WHERE AssignedTo = N;
	DECLARE CR_ROUTER CURSOR FOR SELECT RID,RType,RouteFinding,Connectivity FROM router WHERE AssignedTo = N;

	-- CREATING TABLES
	DROP TABLE IF EXISTS networkhubanalysis;
	CREATE TABLE networkhubanalysis(
		H_ID VARCHAR(20),
		H_SUMMARY JSON,
		CONSTRAINT PK_HUB PRIMARY KEY(H_ID)
		);
	DROP TABLE IF EXISTS networkswitchanalysis;
	CREATE TABLE networkswitchanalysis(
		S_ID VARCHAR(20),
		S_SUMMARY JSON,
		CONSTRAINT PK_SWITCH PRIMARY KEY(S_ID)
		);
	DROP TABLE IF EXISTS networkrepeateranalysis;
	CREATE TABLE networkrepeateranalysis(
		RP_ID VARCHAR(20),
		RP_SUMMARY JSON,
		CONSTRAINT PK_REP PRIMARY KEY(RP_ID)
		);
	DROP TABLE IF EXISTS networkrouteranalysis;
	CREATE TABLE networkrouteranalysis(
		RT_ID VARCHAR(20),
		RT_SUMMARY JSON,
		CONSTRAINT PK_RT PRIMARY KEY(RT_ID)
		);

	-- CHECK FOR COMPONENT TYPE / CONDITIONAL STATEMENTS 
	IF CT = 'Hub' THEN
	-- OPEN CUSOR
	OPEN CR_HUB;
	SET COUNTER = 0;
	SELECT FOUND_ROWS() INTO ROW_COUNT;
	WHILE COUNTER < ROW_COUNT DO
	FETCH CR_HUB INTO C_ID, C_PORTS, C_ENTRYPORT, C_EXITPORT, C_NETWORK;
		SET PRATIO = (C_ENTRYPORT + C_EXITPORT) / C_PORTS;
		SET PORTDIFF = ABS(FLOOR(C_ENTRYPORT - C_EXITPORT));
		INSERT INTO networkhubanalysis VALUES(
			C_ID,
			JSON_OBJECT("Hub:",C_ID,"Port Ratio:",PRATIO,"Port Difference:",PORTDIFF)			);

	SET COUNTER = COUNTER + 1;
	END WHILE;

	CLOSE CR_HUB;

	DESC networkhubanalysis;
	SELECT * FROM networkhubanalysis;
	END IF;

	-- IF SWITCH
	IF CT = 'Switch' THEN
	-- OPEN SWITCH CURSOR
	OPEN CR_SWITCH;
	SET COUNTER = 0;
	SELECT FOUND_ROWS() INTO ROW_COUNT;
	WHILE COUNTER < ROW_COUNT DO
	FETCH CR_SWITCH INTO C_ID, C_ENTRYPORT, C_EXITPORT;
		SET PORTDIFF = ROUND(ABS(C_ENTRYPORT - C_EXITPORT));
		INSERT INTO networkswitchanalysis VALUES(
			C_ID,
			JSON_OBJECT("Switch:",C_ID,"Port Difference:",PORTDIFF)			);

	SET COUNTER = COUNTER + 1;
	END WHILE;

	CLOSE CR_SWITCH;
	DESC networkswitchanalysis;
	SELECT * FROM networkswitchanalysis;
	
	END IF;

	-- IF REPEATER
	IF CT = 'Repeater' THEN
	-- OPEN REPEATER CURSOR
	OPEN CR_REP;
	SET COUNTER = 0;
	SELECT FOUND_ROWS() INTO ROW_COUNT;
	WHILE COUNTER < ROW_COUNT DO
	FETCH CR_REP INTO C_ID, C_PORTS, C_ENTRYPORT, C_EXITPORT, C_NETWORK;
		SET PRATIO = (C_ENTRYPORT + C_EXITPORT) / C_PORTS;
		SET PORTDIFF = ROUND(ABS(C_ENTRYPORT - C_EXITPORT));
		INSERT INTO networkrepeateranalysis VALUES(
			C_ID,
			JSON_OBJECT("Repeater:",C_ID,"Port Ratio:",PRATIO,"Port Difference:",PORTDIFF)			);

	SET COUNTER = COUNTER + 1;
	END WHILE;

	CLOSE CR_REP;
	DESC networkrepeateranalysis;
	SELECT * FROM networkrepeateranalysis;
	
	END IF;

	-- IF ROUTER
	IF CT = 'Router' THEN
	-- OPEN ROUTER CURSOR
	OPEN CR_ROUTER;
	SET COUNTER = 0;
	SELECT FOUND_ROWS() INTO ROW_COUNT;
	WHILE COUNTER < ROW_COUNT DO
	FETCH CR_ROUTER INTO C_ID, C_RTYPE, C_RF, C_CON;
		INSERT INTO networkrouteranalysis VALUES(
			C_ID,
			JSON_OBJECT("Type:",C_RTYPE,"Router:",C_ID,"Connect:",C_CON,"Finding:",C_RF)			);

	SET COUNTER = COUNTER + 1;
	END WHILE;

	CLOSE CR_ROUTER;
	DESC networkrouteranalysis;
	SELECT * FROM networkrouteranalysis;
	
	END IF;

END //

DELIMITER ;

CALL networkComponentAnalysis('Brore03yNET_SAT', 'Hub');
CALL networkComponentAnalysis('Brore03yNET_SAT', 'Switch');
CALL networkComponentAnalysis('Brore03yNET_SAT', 'Repeater');
CALL networkComponentAnalysis('Brore03yNET_SAT', 'Router');