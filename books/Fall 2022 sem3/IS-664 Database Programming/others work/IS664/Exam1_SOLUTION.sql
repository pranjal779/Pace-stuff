/*
Exam 1 
IS664 Fall 2021
*/

USE imperial_defense;

DROP PROCEDURE IF EXISTS network_summary;
DELIMITER //
CREATE PROCEDURE network_summary(N varchar(30))
BEGIN
	-- UTILITY VARIABLES
	DECLARE I INT; 
	DECLARE FROWS INT;
	DECLARE RTRS VARCHAR(100); DECLARE SWS VARCHAR(100);
	DECLARE HBS VARCHAR(100); DECLARE RPS VARCHAR(100);
	DECLARE R_COUNT INT; DECLARE S_COUNT INT;  
	DECLARE H_COUNT INT;  DECLARE RP_COUNT INT; 
	-- CURSOR VARIABLES
	DECLARE A VARCHAR(100);

	-- CURSOR
	DECLARE C_CURSOR CURSOR FOR 
	(SELECT R.RID AS 'Component ID'
		FROM Router R
		WHERE assignedTo = N)
UNION
	(SELECT S.SID
		FROM Switch S
		WHERE assignedTo = N)
UNION
	(SELECT H.HID
		FROM Hub H
		WHERE assignedTo = N)
UNION
	(SELECT RP.RPID
		FROM Repeater RP
		WHERE assignedTo = N);

DROP TABLE IF EXISTS N_Components;
CREATE TABLE N_Components(
NID INT AUTO_INCREMENT,
Net_Name VARCHAR(30),
All_Routers VARCHAR(30),
All_Switches VARCHAR(30),
All_Hubs VARCHAR(30),
All_Repeaters VARCHAR(30),
RouterCount INT,
SwitchCount INT,
HubCount INT,
RepeaterCount INT,
CONSTRAINT PK_NC PRIMARY KEY(NID),
CONSTRAINT FK_NC FOREIGN KEY(Net_Name) REFERENCES Network(NetName)
);

	-- OPEN CURSOR
	OPEN C_CURSOR;
	SET FROWS = FOUND_ROWS();
	SET I = 0;
	SET R_COUNT = 0; SET S_COUNT = 0; SET H_COUNT = 0; SET RP_COUNT = 0;
	-- FETCH CURSOR
	WHILE I < FROWS DO
		FETCH C_CURSOR INTO A;
		IF A LIKE 'RTR%' THEN
			SET R_COUNT = R_COUNT + 1;
			SET RTRS = CONCAT_WS(' ',RTRS,A);
		END IF;
		IF A LIKE 'SW%' THEN
			SET S_COUNT = S_COUNT + 1;
			SET SWS = CONCAT_WS(' ',SWS,A);
		END IF;
		IF A LIKE 'HB%' THEN
			SET H_COUNT = H_COUNT + 1;
			SET HBS = CONCAT_WS(' ',HBS,A);
		END IF;
		IF A LIKE 'RPTR%' THEN
			SET RP_COUNT = RP_COUNT + 1;
			SET RPS = CONCAT_WS(' ',RPS,A);
		END IF;				
		SET I = I + 1;
	END WHILE;		
		INSERT INTO N_Components (Net_Name,All_Routers,All_Switches,All_Hubs,All_Repeaters,
			RouterCount,SwitchCount,HubCount,RepeaterCount) VALUES(N,RTRS,SWS,HBS,RPS,R_COUNT,S_COUNT,H_COUNT,RP_COUNT);
	-- CLOSE CURSOR
	CLOSE C_CURSOR;

	SELECT * FROM N_Components;

END //
DELIMITER ;

CALL network_summary('Brore03yNET_SAT');
CALL network_summary('Zebetis05uNET_CIV');